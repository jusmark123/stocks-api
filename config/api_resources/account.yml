resources:
  App\Entity\Account:
    attributes:
      normalization_context:
        groups: [ 'account.get' ]
      denormalization_context:
        groups: [ 'account.post' ]

    collectionOperations:
      get:
        method: GET
      post:
        method: POST

      account_history:
        method: GET
        path: /account/{id}/account_history
        force_eager: false
        defaults:
          _api_resource_context:
            identifiers:
              - [ id, App\Entity\Account, true ]
        normalization_context:
          groups: [ order_info.get ]
        swagger_context:
          summary: Get account history from a brokerage
          tags: [ Account ]
          parameters:
            - name: id
              in: path
              required: true

    itemOperations:
      get:
        method: GET
      put:
        method: PUT
      delete:
        method: DELETE

      get_account_info:
        method: GET
        path: /accounts/{id}/account_info
        force_eager: false
        defaults:
          _api_subresource_context:
            identifiers:
              - [ 'id', 'App\Entity\Account', true]
        normalization_context:
          groups: [ account_info.get, account_info:alpaca.get, account_info:td_ameritrade.get ]
        swagger_context:
          summary: Return brokerage account information from brokerage specific webservice
          tags: ['Account']
          parameters:
            - name: id
              in: path
              required: true

      account_sync_orders:
        method: GET
        path: /account/{id}/sync_orders/{source_id}
        output: App\Entity\Job
        force_eager: false
        defaults:
          _api_subresource_context:
            identifiers:
              - [ id, App\Entity\Account, true ]
              - [ source_id, App\Entity\Source, true]
        normalization_context:
          groups: [ job.get ]
        swagger_context:
          summary: Sync account orders from a brokerage
          tags: [ Account ]
          responses:
            200:
              description: 'Job Initiated'
              content:
                application/json:
                  schema:
                    items:
                      $ref: '#/definitions/Job-job.get'
            400:
              description: "Job Failed"
            401:
              description: "Unauthorized"
            404:
              description: "Account not found"
          parameters:
            - name: id
              in: path
              required: true
            - name: source_id
              description: 'Optionally add a source to apply to processed data requiring source attribution'
              in: path
              required: false
            - name: status
              in: query
              required: true
              type: string
              default: 'all'
            - name: limit
              in: query
              required: false
              type: integer
            - name: after
              type: string
              in: query
              required: false
              format: date-time
            - name: until
              type: string
              in: query
              required: false
              format: date-time
            - name: direction
              type: string
              in: query
              required: false
            - name: nested
              type: bool
              in: query
              required: false

    properties:
      id:
        identifier: false
      guid:
        identifier: true
        swagger_context:
          example: 'd6f68382-dd82-4324-b04c-89266d70ee2a'
