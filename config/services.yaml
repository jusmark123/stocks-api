# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    project_namespace: '%env(PROJECT_NAMESPACE)%'
    project_name: '%env(PROJECT_NAME)%'
    project_version: '%env(PROJECT_VERSION)%'
    url_path_prefix: '/%project_namespace%/%project_name%/%project_version%'
    system_username: 'system'

    env(RABBITAMQP_HOST): 'broadcast-client-socket-rabbitmq'
    env(RABBITAMQP_POST): '5672'
    env(RABBITAMQP_USERNAME): guest
    env(RABBITAMQP_PASSWORD): guest
    env(RABBITAMQP_VHOST): '/'
    env(RABBITAMQP_HEARTBEAT): '60.0'

    env(RABBITAMQP_TOPIC_PREFIX): '%project_namespace%.%project_name%'
    env(RABBITAMQP_TOPIC_EXCHANGE): amq.topic

    env(RABBITAMQP_ANONYMOUS): '0'

    env(SERVICE_VERSION): 'v1'
    env(SERVICE_NAME): 'name'
    env(SERVICE_MAMESPACE): 'namespace'

    broadcast.amqp.rabbit-host: '%env(RABBITAMQP_HOST)%'
    broadcast.amqp.rabbit-port: '%env(RABBITAMQP_PORT)%'
    broadcast.amqp.rabbit-username: '%env(RABBITAMQP_USERNAME)%'
    broadcast.amqp.rabbit-password: '%env(RABBITAMQP_PASSWORD)%'
    broadcast.amqp.rabbit-vhost: '%env(RABBITAMQP_VHOST)%'
    broadcast.amqp.rabbit-heartbeat: '%env(RABBITAMQP_HEARTBEAT)%'

    broadcast.amqp.topic-prefix: '%env(RABBITAMQP_TOPIC_PREFIX)%'
    broadcast.amqp.topic-exchange: '%env(RABBITAMQP_TOPIC_EXCHANGE)%'

    broadcast.amqp.anonymous: '%env(RABBITAMQP_ANONYMOUS)%'

    broadcast.service.version: '%env(SERVICE_VERSION)%'
    broadcast.service.name: '%env(SERVICE_NAME)%'
    broadcast.service.namespace: '%env(SERVICE_NAMESPACE)%'
    stocks_api_doctrine:
        fixtures_load:
            exclude_from_purge:
                - account_status_type
                - position_status_type
                - order_status_type
                - order_type
                - source_type
                - user_type
        schema_tables_drop:
            exclude_environment:
                - prod
            exclude_from_drop: []

imports:
    - resource: 'api_filters/*.yml'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    ####### BrokerageService Provider ######

    _instanceof:
        App\Service\Brokerage\BrokerageServiceInterface:
            tags: [ 'stocks_api.brokerage_services_provider' ]
        App\JobHandler\JobHandlerInterface:
            tags: [ 'stocks_api.job_handler_provider' ]

    ####### Commands ##########


    ####### Controller ########

    ####### JobHandlers #######

    App\JobHandler\JobHandlerProvider:
        arguments:
            $jobHandlers: !tagged stocks_api.job_handler_provider

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: [ 'controller.service_arguments' ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ApiPlatform\Core\Bridge\RamseyUuid\Identifier\Normalizer\UuidNormalizer: ~

    ####### Entity Listeners ########

    App\Entity\Listener\:
        resource: '../src/Entity/Listener/*'
        tags:
            - { name: doctrine.orm.entity_listener, lazy: true }

    ###### Entity Managers ######

    App\Entity\Manager\:
        resource: '../src/Entity/Manager/*'

    ###### Event Subscribers #####

    App\EventSubscriber\:
        resource: '../src/EventSubscriber/*'
        tags:
            - { name: kernel.event_subscriber }

    ###### Services ######

    App\Service\Brokerage\BrokerageServiceProvider:
        arguments:
            $brokerageServices: !tagged stocks_api.brokerage_services_provider

    ###### DataProviders ######


    ###### DataPersisters ######


    ###### Swagger Decorator ######

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.api_gateway'
        arguments: [ '@App\Swagger\SwaggerDecorator.inner' ]
        autoconfigure: false

    ###### Message Client #######

    GuzzleHttp\ClientInterface:
        alias: guzzle.client

    guzzle.client:
        class: GuzzleHttp\Client

    React\EventLoop\LoopInterface:
        public: true
        factory: React\EventLoop\Factory::create

    App\MessageClient\Protocol\CredentialHandlerDefault:
        arguments:
            $anonymous: '%broadcast.amqp.anonymous'
        properties:
            anonymousPassword: guest
            anonymousUsername: guest

    App\MessageClient\Protocol\CredentialHandler:
        alias: App\MessageClient\Protocol\CredentialHandlerDefault

    App\MessageClient\Protocol\FrameType\:
        public: true
        resource: '../src/MessageClient/Protocol/FrameType'
        tags:
            - app.protocol.frame-type

    App\MessageClient\Protocol\MessageFactory:
        public: true
        arguments:
            $frameTypes: !tagged app.protocol.frame-type
            $namespace: '%broadcast.service.namespace%'
            $name: '%broadcast.service.name%'
            $version: '%broadcast.service.version%'

    App\MessageClient\Command\:
        resource: '../src/MessageClient/Command/*'
        tags:
            - console.command

    App\MessageClient\Command\ConsumerRun:
        arguments:
            $listenerProvider: '@?App\MessageClient\ClientListener\ClientListenerProvider'
        tags:
            - console.command

    App\MessageClient\BunnyAmqpSyncClientFactory:
        public: true
        arguments:
            $options:
                host: '%broadcast.amqp.rabbit-host%'
                port: '%broadcast.amqp.rabbit-port%'
                user: '%broadcast.amqp.rabbit-username%'
                password: '%broadcast.amqp.rabbit-password%'
                vhost: '%broadcast.amqp.rabbit-vhost%'

    App\MessageClient\BunnyAmqpClientFactory:
        public: true
        arguments:
            $options:
                host: '%broadcast.amqp.rabbit-host%'
                port: '%broadcast.amqp.rabbit-port%'
                user: '%broadcast.amqp.rabbit-username%'
                password: '%broadcast.amqp.rabbit-password%'
                vhost: '%broadcast.amqp.rabbit-vhost%'

    App\MessageClient\ClientFactory:
        public: true
        alias: App\MessageClient\BunnyAmqpClientFactory

    App\MessageClient\ClientListener\BunnyListenerProvider:
        arguments:
            $amqpQueueNamePrefix: '%broadcast.amqp.topic-prefix%'
            $exchangeName: '%broadcast.amqp.topic-exchange%'
            $listeners: !tagged stocks-api.message-client.client-listener

    Bunny\Async\Client:
        public: true
        alias: App\MessageClient\BunnyAsyncClient

    App\MessageClient\BunnyAsyncClient:
        arguments:
            $options:
                host: '%broadcast.amqp.rabbit-host%'
                port: '%broadcast.amqp.rabbit-port%'
                user: '%broadcast.amqp.rabbit-username%'
                password: '%broadcast.amqp.rabbit-password%'
                vhost: '%broadcast.amqp.rabbit-vhost%'
                heartbeat: '%broadcast.amqp.rabbit-heartbeat%'

    App\MessageClient\ClientListener\ClientListenerProvider:
        public: true
        alias: App\MessageClient\ClientListener\BunnyListenerProvider

    App\MessageClient\ClientPublisher\BunnyClientPublisher:
        arguments:
            $exchangeName: '%broadcast.amqp.topic-exchange%'
            $publisherName: '%project_namespace%.%project_name'

    App\MessageClient\ClientPublisher\ClientPublisher:
        public: true
        alias: App\MessageClient\ClientPublisher\BunnyClientPublisher

    App\MessageClient\SyncClientFactory:
        public: true
        alias: App\MessageClient\BunnyAmqpSyncClientFactory