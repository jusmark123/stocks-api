# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    system_ip: '%env(SYSTEM_IP)%'
    project_namespace: '%env(PROJECT_NAMESPACE)%'
    project_name: '%env(PROJECT_NAME)%'
    project_version: '%env(PROJECT_VERSION)%'
    url_path_prefix: '/%project_namespace%/%project_name%/%project_version%'
    system_username: 'system'
    app_topic_arn: 'arn:aws:sns:us-west-2:%env(AWS_ACCOUNT)%:app'
    sns_config:
        region: '%env(AWS_REGION)%'
        accessKeyId: '%env(AWS_ACCESS_KEY_ID)%'
        accessKeySecret: '%env(AWS_SECRET_ACCESS_KEY)%'

    env(RABBITAMQP_HOST): 'broadcast-client-socket-rabbitmq'
    env(RABBITAMQP_POST): '5672'
    env(RABBITAMQP_USERNAME): guest
    env(RABBITAMQP_PASSWORD): guest
    env(RABBITAMQP_VHOST): '/'
    env(RABBITAMQP_HEARTBEAT): '60.0'

    env(RABBITAMQP_TOPIC_PREFIX): '%project_namespace%.%project_name%'
    env(RABBITAMQP_TOPIC_EXCHANGE): amq.topic

    env(RABBITAMQP_ANONYMOUS): '0'

    env(SERVICE_VERSION): 'v1'
    env(SERVICE_NAME): 'name'
    env(SERVICE_MAMESPACE): 'namespace'

    broadcast.amqp.rabbit-host: '%env(RABBITAMQP_HOST)%'
    broadcast.amqp.rabbit-port: '%env(RABBITAMQP_PORT)%'
    broadcast.amqp.rabbit-username: '%env(RABBITAMQP_USERNAME)%'
    broadcast.amqp.rabbit-password: '%env(RABBITAMQP_PASSWORD)%'
    broadcast.amqp.rabbit-vhost: '%env(RABBITAMQP_VHOST)%'
    broadcast.amqp.rabbit-heartbeat: '%env(RABBITAMQP_HEARTBEAT)%'

    broadcast.amqp.topic-prefix: '%env(RABBITAMQP_TOPIC_PREFIX)%'
    broadcast.amqp.topic-exchange: '%env(RABBITAMQP_TOPIC_EXCHANGE)%'

    broadcast.amqp.anonymous: '%env(RABBITAMQP_ANONYMOUS)%'

    broadcast.service.version: '%env(SERVICE_VERSION)%'
    broadcast.service.name: '%env(SERVICE_NAME)%'
    broadcast.service.namespace: '%env(SERVICE_NAMESPACE)%'
    stocks_api_doctrine:
        fixtures_load:
            exclude_from_purge:
                - account_status_type
                - position_status_type
                - order_status_type
                - order_type
                - source_type
                - user_type
        schema_tables_drop:
            exclude_environment:
                - prod
            exclude_from_drop: []

imports:
    - resource: 'api_filters/*.yml'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    ####### BrokerageService Provider ######

    _instanceof:
        App\Service\Brokerage\BrokerageServiceInterface:
            tags: [ 'stocks_api.brokerage_services_provider' ]

    ####### Filters ###########

    stocks_api.api_platform.orm.or_search_filter:
        class: App\Filter\OrSearchFilter
        autowire: true
        autoconfigure: true
        arguments:
            $managerRegistry: '@doctrine'
        public: false

    ####### Commands ##########

    ####### Predis ########

    Predis\Client: '@snc_redis.default'
    Predis\ClientInterface: '@Predis\Client'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: [ 'controller.service_arguments' ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ApiPlatform\Core\Bridge\RamseyUuid\Identifier\Normalizer\UuidNormalizer: ~

    ####### Entity Listeners ########

    App\Entity\Listener\:
        resource: '../src/Entity/Listener/*'
        tags:
          - { name: doctrine.orm.entity_listener, lazy: true }

    ###### Entity Managers ######

    App\Entity\Manager\:
        resource: '../src/Entity/Manager/*'

    ###### Event Listeners #######

    App\EventListener\DeserializeListener:
        autoconfigure: false
        decorates: 'api_platform.listener.request.deserialize'
        arguments:
            $decorated: '@App\EventListener\DeserializeListener.inner'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 2 }

    ###### Event Subscribers #####

    App\EventSubscriber\:
        resource: '../src/EventSubscriber/*'
        autowire: true
        tags:
            - { name: kernel.event_subscriber }

    App\EventSubscriber\Job\JobEventSubscriber:
        autowire: true
        autoconfigure: true
        arguments:
            $topicArn: '%app_topic_arn%'

    App\EventSubscriber\Job\JobFailedEventSubscriber:
        autowire: true
        autoconfigure: true
        arguments:
            $topicArn: '%app_topic_arn%'

    App\EventSubscriber\Job\JobItemEventSubscriber:
        autowire: true
        autoconfigure: true
        arguments:
            $topicArn: '%app_topic_arn%'

    App\EventSubscriber\Job\JobItemFailedEventSubscriber:
        autowire: true
        autoconfigure: true
        arguments:
            $topicArn: '%app_topic_arn%'

    ###### Data Provider #######

    App\DataProvider\:
        resource: '../src/DataProvider/*'

    ###### Services ######

    App\Service\Brokerage\BrokerageServiceProvider:
        arguments:
            $brokerageServices: !tagged stocks_api.brokerage_services_provider

    App\Service\PaginatorService:
        autowire: true

    App\Service\TopicService:
        arguments:
            $urlPrefix: '%url_path_prefix%'
            $region: '%env(AWS_REGION)%'
            $systemIp: '%env(SYSTEM_HOST)%'

    ###### Paginator Factory ##########

    App\Paginator\PaginatorFactory:
        autowire: true

    ###### Swagger Decorator ######

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.api_gateway'
        arguments: [ '@App\Swagger\SwaggerDecorator.inner' ]
        autoconfigure: false

    ###### Messages ######

    App\Message\ApplicationMessage:
        arguments:
            $topicArn: '%app_topic_arn%'

    ###### Authentication Services ######

    stocks_api.token_success_handler:
        class: \App\Auth\TokenSuccessHandler
        autowire: true
        autoconfigure: true
