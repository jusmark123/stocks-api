version: '2.1'

services:
  stocks-api-php:
    build: ./docker/php-fpm
    container_name: ${DOCKER_RUNNING_IMAGE_NAME}
    ports:
        - ${PHP_FPM_IMAGE_PORT}9001
    volumes:
        - .:/opt/app-root/src
        - ./logs/symfony:/opt/app-root/src/var/log
    links:
      - stocks-api-database
    env_file:
      - .env

  stocks-api-nginx:
    build: ./docker/nginx
    container_name: ${DOCKER_RUNNING_IMAGE_NAME}-nginx
    ports:
        - ${NGINX_PORT}8080
    links:
        - stocks-api-php
    volumes:
        - .:/opt/app-root/src
        - ./logs/nginx:/var/log/nginx

  stocks-api-database:
    image: mysql:latest
    container_name: ${DOCKER_RUNNING_IMAGE_NAME}-mysql
    command: ["--default-authentication-plugin=mysql_native_password"]
    ports:
        - ${MYSQL_IMAGE_PORT}3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}

  stocks-api-rabbitmq:
    image: library/rabbitmq:3.8.3
    container_name: ${DOCKER_RUNNING_IMAGE_NAME}-rabbitmq
    volumes:
      - ./docker/rabbitmq:/etc/rabbitmq
    ports:
      - 5672:5672
      - ${DOCKER_RABBITMQ_MANAGEMENT_PORT}15672
    healthcheck:
      test:
        - CMD
        - rabbitmqctl
        - status

  stocks-api-mailhog:
    image: mailhog/mailhog
    container_name: ${DOCKER_RUNNING_IMAGE_NAME}-mailhog
    ports:
      - 1025
      - 8025

  stocks-api-satis:
    image: ypereirareis/docker-satis:${IMAGE_VERSION:-5.4}
    build: ./docker/satis
    container_name: ${DOCKER_RUNNING_IMAGE_NAME}-satis
    hostname: satis
    ports:
      - ${SATIS_PORT}80
      - ${SATIS_SSL_PORT}443
    networks:
      - webproxy
    volumes:
      - "/var/tmp/composer:/var/www/.composer"
      - "~/.ssh/id_rsa:/var/tmp/id"
      - "./docker/satis/config:/satisfy/config"
    environment:
      PRIVATE_REPO_DOMAIN_LIST: bitbucket.org gitlab.com github.com github.com/JwalkerLib/
      CRONTAB_FREQUENCY: "*/5 * * * *"
      VIRTUAL_HOST: ${VHOST}

networks:
  webproxy:
    external:
      name: ${PROXY_NETWORK}
